@import url(https://fonts.googleapis.com/css?family=Merriweather:900|Open+Sans&display=swap);
/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0; }

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */ }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none; }

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none; }

body {
  position: relative;
  background: white;
  overflow-x: hidden;
  font-family: 'Open Sans', sans-serif;
  text-rendering: optimizeLegibility;
  color: #222; }

img, video {
  width: 100%;
  height: auto;
  min-height: 100%;
  display: block;
  -o-object-fit: cover;
     object-fit: cover; }

.blur-up {
  -webkit-filter: blur(8px);
          filter: blur(8px);
  -webkit-transition: -webkit-filter 600ms;
  transition: -webkit-filter 600ms;
  transition: filter 600ms;
  transition: filter 600ms, -webkit-filter 600ms; }
  .blur-up.lazyloaded {
    -webkit-filter: blur(0);
            filter: blur(0); }

*::-moz-selection {
  color: white;
  background: rgba(226, 51, 66, 0.7); }

*::selection {
  color: white;
  background: rgba(226, 51, 66, 0.7); }

p, small, li, h2, h3, h4, h5, h6, input, label, span {
  color: #777; }

h1, h2, h3, h4, h5, h6 {
  font-family: 'Merriweather', serif; }

h1 {
  color: white;
  font-weight: 900;
  text-shadow: 5px 5px 5px rgba(0, 0, 0, 0.1);
  font-size: 2em; }
  @media (min-width: 1200px) {
    h1 {
      font-size: 3em; } }

@media (min-width: 800px) {
  p {
    line-height: 1.5;
    font-size: 1.125rem;
    font-weight: 400; } }

a {
  text-decoration: none;
  color: #e23342; }
  a:hover {
    text-decoration: underline; }

* {
  box-sizing: border-box; }

.btn {
  border-radius: 3px;
  border: 1px #e23342 solid;
  padding: .75em 1em;
  background-color: rgba(226, 51, 66, 0.9);
  color: white;
  cursor: pointer;
  font-weight: 600;
  -webkit-transition: all .3s ease-in-out;
  transition: all .3s ease-in-out; }
  .btn:hover {
    background: #e23342;
    text-decoration: underline; }
  .btn--border {
    border: 1px rgba(255, 255, 255, 0.9) solid; }

.section {
  display: -webkit-box;
  display: flex;
  flex-wrap: wrap;
  -webkit-box-pack: center;
          justify-content: center;
  margin-top: 1.5em; }
  .section.hero {
    margin-top: 0; }
  .section__title {
    display: -webkit-box;
    display: flex;
    -webkit-box-pack: center;
            justify-content: center;
    -webkit-box-align: start;
            align-items: flex-start;
    width: 100%; }
    .section__title h2 {
      position: relative;
      font-size: 1.75em; }
    .section__title--white h2 {
      color: white; }
      .section__title--white h2:after {
        background: white; }
  .section__description {
    display: -webkit-box;
    display: flex;
    -webkit-box-pack: center;
            justify-content: center;
    width: 100%;
    padding: 0 10%; }

.gallery {
  position: relative; }
  .gallery__item {
    position: absolute;
    top: 0;
    -webkit-transition: -webkit-transform .3s ease-in-out;
    transition: -webkit-transform .3s ease-in-out;
    transition: transform .3s ease-in-out;
    transition: transform .3s ease-in-out, -webkit-transform .3s ease-in-out;
    max-height: 100vh;
    min-height: 40vh; }
    .gallery__item:first-child {
      position: relative; }
    @media (min-width: 1200px) {
      .gallery__item {
        min-height: 100%; } }
  .gallery__arrow {
    position: absolute;
    width: 2em;
    height: 2em;
    top: 50%;
    border-radius: 50%;
    z-index: 1;
    cursor: pointer;
    background-repeat: no-repeat;
    background-position: center;
    background-size: cover;
    background-image: url("/images/icons/arrow.svg"); }
    .gallery__arrow--prev {
      left: .5em;
      right: auto;
      -webkit-transform: translateY(-50%) rotate(180deg);
              transform: translateY(-50%) rotate(180deg); }
    .gallery__arrow--next {
      right: .5em;
      left: auto;
      -webkit-transform: translateY(-50%) rotate(0deg);
              transform: translateY(-50%) rotate(0deg); }

.form {
  width: 100%; }
  .form__item {
    margin: .5em 0;
    display: -webkit-box;
    display: flex;
    flex-wrap: wrap; }
    .form__item label {
      width: 100%;
      margin: .1em; }
    .form__item input, .form__item textarea {
      border-radius: 2px;
      border: 1px rgba(119, 119, 119, 0.75) solid;
      padding: .25em;
      width: 100%; }

.header {
  position: fixed;
  z-index: 2;
  height: 2em;
  width: 100%; }
  .header__logo {
    position: relative;
    max-width: 8em;
    z-index: 2;
    margin: .25em .5em; }
  .header__nav {
    position: absolute;
    width: 100%;
    height: 50vh;
    display: -webkit-box;
    display: flex;
    flex-wrap: wrap;
    -webkit-box-pack: center;
            justify-content: center;
    padding: 1.5em 0;
    top: 0;
    -webkit-transform: translateY(-90%);
            transform: translateY(-90%);
    -webkit-transition: -webkit-transform .5s ease-in-out;
    transition: -webkit-transform .5s ease-in-out;
    transition: transform .5s ease-in-out;
    transition: transform .5s ease-in-out, -webkit-transform .5s ease-in-out;
    background: linear-gradient(-45deg, rgba(226, 51, 66, 0.9), rgba(34, 34, 34, 0.9));
    -webkit-clip-path: polygon(0 0, 0 50%, 50% 100%, 100% 50%, 100% 0%);
            clip-path: polygon(0 0, 0 50%, 50% 100%, 100% 50%, 100% 0%); }
    @media (min-width: 1200px) {
      .header__nav {
        -webkit-box-pack: right;
                justify-content: right;
        -webkit-transform: translateY(0%);
                transform: translateY(0%);
        height: auto;
        -webkit-clip-path: none;
                clip-path: none;
        padding: .25em 0; } }
    .header__nav ul {
      position: relative;
      width: 80%;
      padding: 0;
      list-style: none;
      text-align: center; }
      .header__nav ul li {
        margin: .5em; }
        .header__nav ul li a {
          color: white; }
        @media (min-width: 1200px) {
          .header__nav ul li {
            display: inline; } }
        .header__nav ul li .border {
          border: 1px white solid; }
      .header__nav ul:first-child {
        align-self: center;
        margin: 0; }
        @media (min-width: 1200px) {
          .header__nav ul:first-child {
            width: 40%;
            margin-left: 25%; } }
      .header__nav ul:nth-child(2) {
        margin-top: 1em; }
        @media (min-width: 1200px) {
          .header__nav ul:nth-child(2) {
            width: 33.33%; } }
        .header__nav ul:nth-child(2)::before {
          position: absolute;
          content: '';
          width: 40%;
          margin: 0 30%;
          height: 2px;
          left: 0;
          top: -1em;
          background: white; }
          @media (min-width: 1200px) {
            .header__nav ul:nth-child(2)::before {
              display: none; } }
    .header__nav:hover, .header__nav--visible {
      -webkit-transform: translateY(0%);
              transform: translateY(0%); }

.footer {
  position: relative;
  background: white;
  margin-top: 1.5em;
  justify-content: space-around;
  -webkit-box-align: start;
          align-items: flex-start; }
  .footer .contact {
    display: -webkit-box;
    display: flex;
    flex-wrap: wrap;
    -webkit-box-pack: center;
            justify-content: center;
    width: 100%;
    z-index: 1; }
    @media (min-width: 1200px) {
      .footer .contact {
        width: 32%; } }
  .footer .form-contact {
    display: -webkit-box;
    display: flex;
    flex-wrap: wrap;
    -webkit-box-pack: center;
            justify-content: center;
    width: 80%;
    z-index: 1; }
    @media (min-width: 1200px) {
      .footer .form-contact {
        width: 32%; } }
  .footer .legal {
    display: -webkit-box;
    display: flex;
    flex-wrap: wrap;
    -webkit-box-pack: center;
            justify-content: center;
    width: 100%;
    z-index: 1; }
    @media (min-width: 1200px) {
      .footer .legal {
        width: 32%; } }
    .footer .legal li.logo {
      display: -webkit-box;
      display: flex;
      flex-wrap: wrap;
      margin: 0 0 1em 2em; }
      .footer .legal li.logo img {
        height: 3em;
        width: auto; }
      .footer .legal li.logo p {
        margin: 0;
        width: 100%; }
  .footer .copyright {
    display: -webkit-box;
    display: flex;
    flex-wrap: wrap;
    margin: auto;
    position: absolute;
    bottom: 2em;
    width: 90%;
    z-index: 1; }
    @media (min-width: 1200px) {
      .footer .copyright {
        bottom: -70%; } }
    .footer .copyright p {
      width: 100%;
      color: white; }
      .footer .copyright p a {
        color: white;
        font-weight: 600; }
      .footer .copyright p:first-child {
        text-align: left; }
      .footer .copyright p:last-child {
        text-align: right; }
  .footer .image {
    width: 100%;
    height: 100%;
    position: relative;
    top: 0;
    z-index: 0; }
    @media (min-width: 1200px) {
      .footer .image {
        position: absolute;
        top: 70%; } }
    .footer .image:before {
      content: '';
      position: absolute;
      top: 0;
      width: 100%;
      height: 10em;
      background: -webkit-gradient(linear, left top, left bottom, from(white), to(transparent));
      background: linear-gradient(180deg, white, transparent);
      z-index: 1; }
  .footer ul {
    list-style: none;
    padding: 0; }
    .footer ul li {
      margin: .5em 0; }
      .footer ul li.social ul {
        list-style: none;
        display: -webkit-box;
        display: flex;
        -webkit-box-pack: start;
                justify-content: flex-start; }
        .footer ul li.social ul li {
          display: inline;
          margin: auto .5em; }
          .footer ul li.social ul li:first-child {
            margin-left: 0; }
          .footer ul li.social ul li img {
            width: 1.75em;
            height: auto; }


/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/